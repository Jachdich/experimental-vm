example
int func(int a,b,c) {
    if a == 1 return 3; else return 4
}

def func(int a,b,c) {
    return 3 if a == 1 else 4
}

str ree(str inp) {
    if inp == "big ree" {
        return "asdf"
    } else {
        return "afas"
    }
}

int a
int a = 1
int a = 3 * 3
int a,b = 3,3 #tuple unpacking, 3,3 is syntactically equivilent to (3,3)
str l = f;
str a[] = ["3", "3"]
a.append("ree")


class r {
    int f
    r() {
        this.f = 3
    }
    
    int doAThing(int a,b,c) {
        return this.f * a * b * c
    }
}

class s extends r {
    s() {
        super() #call super constructor
    }
    int doAThing(int a,b,c,d) {
        return super.doAThing(a,b,c) * d
    }
}
[ree(f) if f != "rar" for f in ["a", "b", "rar"]]
[func(1, 1, x) if x != 4 else func(2, 2, x) for x in [1, 2, 3, 4, 5]]

s thing = new s()

var: (a-zA-Z)(0-9a-zA-Z)*
number: (0-9)*



expr: expr "+" mulexpr | expr "+" mulexpr | mulexpr
mulxpr: mulexpr "*" baseexpr | mulexpr "/" baseexpr | baseexpr
baseexpr: "(" expr ")" | var | number
